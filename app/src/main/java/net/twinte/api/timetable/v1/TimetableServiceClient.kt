// Code generated by connect-kotlin. DO NOT EDIT.
//
// Source: timetable/v1/service.proto
//
package net.twinte.api.timetable.v1

import com.connectrpc.Headers
import com.connectrpc.Idempotency
import com.connectrpc.MethodSpec
import com.connectrpc.ProtocolClientInterface
import com.connectrpc.ResponseMessage
import com.connectrpc.StreamType

/**
 *  The following error codes are not stated explicitly in the each rpc, but may be returned.
 *    - shared.InvalidArgument
 *    - shared.Unauthenticated
 *    - shared.Unauthorized
 */
public class TimetableServiceClient(
  private val client: ProtocolClientInterface,
) : TimetableServiceClientInterface {
  override suspend fun listCoursesByCodes(request: Service.ListCoursesByCodesRequest, headers: Headers): ResponseMessage<Service.ListCoursesByCodesResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "timetable.v1.TimetableService/ListCoursesByCodes",
      net.twinte.api.timetable.v1.Service.ListCoursesByCodesRequest::class,
      net.twinte.api.timetable.v1.Service.ListCoursesByCodesResponse::class,
      StreamType.UNARY,
      idempotency = Idempotency.NO_SIDE_EFFECTS,
    ),
  )


  override suspend fun searchCourses(request: Service.SearchCoursesRequest, headers: Headers): ResponseMessage<Service.SearchCoursesResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "timetable.v1.TimetableService/SearchCourses",
      net.twinte.api.timetable.v1.Service.SearchCoursesRequest::class,
      net.twinte.api.timetable.v1.Service.SearchCoursesResponse::class,
      StreamType.UNARY,
      idempotency = Idempotency.NO_SIDE_EFFECTS,
    ),
  )


  override suspend fun createRegisteredCoursesByCodes(request: Service.CreateRegisteredCoursesByCodesRequest, headers: Headers): ResponseMessage<Service.CreateRegisteredCoursesByCodesResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "timetable.v1.TimetableService/CreateRegisteredCoursesByCodes",
      net.twinte.api.timetable.v1.Service.CreateRegisteredCoursesByCodesRequest::class,
      net.twinte.api.timetable.v1.Service.CreateRegisteredCoursesByCodesResponse::class,
      StreamType.UNARY,
    ),
  )


  override suspend fun createRegisteredCourseManually(request: Service.CreateRegisteredCourseManuallyRequest, headers: Headers): ResponseMessage<Service.CreateRegisteredCourseManuallyResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "timetable.v1.TimetableService/CreateRegisteredCourseManually",
      net.twinte.api.timetable.v1.Service.CreateRegisteredCourseManuallyRequest::class,
      net.twinte.api.timetable.v1.Service.CreateRegisteredCourseManuallyResponse::class,
      StreamType.UNARY,
    ),
  )


  override suspend fun listRegisteredCourses(request: Service.ListRegisteredCoursesRequest, headers: Headers): ResponseMessage<Service.ListRegisteredCoursesResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "timetable.v1.TimetableService/ListRegisteredCourses",
      net.twinte.api.timetable.v1.Service.ListRegisteredCoursesRequest::class,
      net.twinte.api.timetable.v1.Service.ListRegisteredCoursesResponse::class,
      StreamType.UNARY,
      idempotency = Idempotency.NO_SIDE_EFFECTS,
    ),
  )


  override suspend fun updateRegisteredCourse(request: Service.UpdateRegisteredCourseRequest, headers: Headers): ResponseMessage<Service.UpdateRegisteredCourseResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "timetable.v1.TimetableService/UpdateRegisteredCourse",
      net.twinte.api.timetable.v1.Service.UpdateRegisteredCourseRequest::class,
      net.twinte.api.timetable.v1.Service.UpdateRegisteredCourseResponse::class,
      StreamType.UNARY,
    ),
  )


  override suspend fun deleteRegisteredCourse(request: Service.DeleteRegisteredCourseRequest, headers: Headers): ResponseMessage<Service.DeleteRegisteredCourseResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "timetable.v1.TimetableService/DeleteRegisteredCourse",
      net.twinte.api.timetable.v1.Service.DeleteRegisteredCourseRequest::class,
      net.twinte.api.timetable.v1.Service.DeleteRegisteredCourseResponse::class,
      StreamType.UNARY,
    ),
  )


  override suspend fun createTag(request: Service.CreateTagRequest, headers: Headers): ResponseMessage<Service.CreateTagResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "timetable.v1.TimetableService/CreateTag",
      net.twinte.api.timetable.v1.Service.CreateTagRequest::class,
      net.twinte.api.timetable.v1.Service.CreateTagResponse::class,
      StreamType.UNARY,
    ),
  )


  override suspend fun listTags(request: Service.ListTagsRequest, headers: Headers): ResponseMessage<Service.ListTagsResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "timetable.v1.TimetableService/ListTags",
      net.twinte.api.timetable.v1.Service.ListTagsRequest::class,
      net.twinte.api.timetable.v1.Service.ListTagsResponse::class,
      StreamType.UNARY,
      idempotency = Idempotency.NO_SIDE_EFFECTS,
    ),
  )


  override suspend fun updateTag(request: Service.UpdateTagRequest, headers: Headers): ResponseMessage<Service.UpdateTagResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "timetable.v1.TimetableService/UpdateTag",
      net.twinte.api.timetable.v1.Service.UpdateTagRequest::class,
      net.twinte.api.timetable.v1.Service.UpdateTagResponse::class,
      StreamType.UNARY,
    ),
  )


  override suspend fun deleteTag(request: Service.DeleteTagRequest, headers: Headers): ResponseMessage<Service.DeleteTagResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "timetable.v1.TimetableService/DeleteTag",
      net.twinte.api.timetable.v1.Service.DeleteTagRequest::class,
      net.twinte.api.timetable.v1.Service.DeleteTagResponse::class,
      StreamType.UNARY,
    ),
  )


  override suspend fun rearrangeTags(request: Service.RearrangeTagsRequest, headers: Headers): ResponseMessage<Service.RearrangeTagsResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "timetable.v1.TimetableService/RearrangeTags",
      net.twinte.api.timetable.v1.Service.RearrangeTagsRequest::class,
      net.twinte.api.timetable.v1.Service.RearrangeTagsResponse::class,
      StreamType.UNARY,
    ),
  )

}
