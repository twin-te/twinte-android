// Code generated by connect-kotlin. DO NOT EDIT.
//
// Source: donation/v1/service.proto
//
package net.twinte.api.donation.v1

import com.connectrpc.Headers
import com.connectrpc.Idempotency
import com.connectrpc.MethodSpec
import com.connectrpc.ProtocolClientInterface
import com.connectrpc.ResponseMessage
import com.connectrpc.StreamType

/**
 *  The following error codes are not stated explicitly in the each rpc, but may be returned.
 *    - shared.InvalidArgument
 *    - shared.Unauthenticated
 *    - shared.Unauthorized
 */
public class DonationServiceClient(
  private val client: ProtocolClientInterface,
) : DonationServiceClientInterface {
  override suspend fun createOneTimeCheckoutSession(request: Service.CreateOneTimeCheckoutSessionRequest, headers: Headers): ResponseMessage<Service.CreateOneTimeCheckoutSessionResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "donation.v1.DonationService/CreateOneTimeCheckoutSession",
      net.twinte.api.donation.v1.Service.CreateOneTimeCheckoutSessionRequest::class,
      net.twinte.api.donation.v1.Service.CreateOneTimeCheckoutSessionResponse::class,
      StreamType.UNARY,
    ),
  )


  override suspend fun createSubscriptionCheckoutSession(request: Service.CreateSubscriptionCheckoutSessionRequest, headers: Headers): ResponseMessage<Service.CreateSubscriptionCheckoutSessionResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "donation.v1.DonationService/CreateSubscriptionCheckoutSession",
      net.twinte.api.donation.v1.Service.CreateSubscriptionCheckoutSessionRequest::class,
      net.twinte.api.donation.v1.Service.CreateSubscriptionCheckoutSessionResponse::class,
      StreamType.UNARY,
    ),
  )


  override suspend fun getPaymentUser(request: Service.GetPaymentUserRequest, headers: Headers): ResponseMessage<Service.GetPaymentUserResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "donation.v1.DonationService/GetPaymentUser",
      net.twinte.api.donation.v1.Service.GetPaymentUserRequest::class,
      net.twinte.api.donation.v1.Service.GetPaymentUserResponse::class,
      StreamType.UNARY,
      idempotency = Idempotency.NO_SIDE_EFFECTS,
    ),
  )


  override suspend fun updatePaymentUser(request: Service.UpdatePaymentUserRequest, headers: Headers): ResponseMessage<Service.UpdatePaymentUserResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "donation.v1.DonationService/UpdatePaymentUser",
      net.twinte.api.donation.v1.Service.UpdatePaymentUserRequest::class,
      net.twinte.api.donation.v1.Service.UpdatePaymentUserResponse::class,
      StreamType.UNARY,
    ),
  )


  override suspend fun listPaymentHistories(request: Service.ListPaymentHistoriesRequest, headers: Headers): ResponseMessage<Service.ListPaymentHistoriesResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "donation.v1.DonationService/ListPaymentHistories",
      net.twinte.api.donation.v1.Service.ListPaymentHistoriesRequest::class,
      net.twinte.api.donation.v1.Service.ListPaymentHistoriesResponse::class,
      StreamType.UNARY,
      idempotency = Idempotency.NO_SIDE_EFFECTS,
    ),
  )


  override suspend fun listSubscriptionPlans(request: Service.ListSubscriptionPlansRequest, headers: Headers): ResponseMessage<Service.ListSubscriptionPlansResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "donation.v1.DonationService/ListSubscriptionPlans",
      net.twinte.api.donation.v1.Service.ListSubscriptionPlansRequest::class,
      net.twinte.api.donation.v1.Service.ListSubscriptionPlansResponse::class,
      StreamType.UNARY,
      idempotency = Idempotency.NO_SIDE_EFFECTS,
    ),
  )


  override suspend fun getActiveSubscription(request: Service.GetActiveSubscriptionRequest, headers: Headers): ResponseMessage<Service.GetActiveSubscriptionResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "donation.v1.DonationService/GetActiveSubscription",
      net.twinte.api.donation.v1.Service.GetActiveSubscriptionRequest::class,
      net.twinte.api.donation.v1.Service.GetActiveSubscriptionResponse::class,
      StreamType.UNARY,
      idempotency = Idempotency.NO_SIDE_EFFECTS,
    ),
  )


  override suspend fun unsubscribe(request: Service.UnsubscribeRequest, headers: Headers): ResponseMessage<Service.UnsubscribeResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "donation.v1.DonationService/Unsubscribe",
      net.twinte.api.donation.v1.Service.UnsubscribeRequest::class,
      net.twinte.api.donation.v1.Service.UnsubscribeResponse::class,
      StreamType.UNARY,
    ),
  )


  override suspend fun getTotalAmount(request: Service.GetTotalAmountRequest, headers: Headers): ResponseMessage<Service.GetTotalAmountResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "donation.v1.DonationService/GetTotalAmount",
      net.twinte.api.donation.v1.Service.GetTotalAmountRequest::class,
      net.twinte.api.donation.v1.Service.GetTotalAmountResponse::class,
      StreamType.UNARY,
      idempotency = Idempotency.NO_SIDE_EFFECTS,
    ),
  )


  override suspend fun listContributors(request: Service.ListContributorsRequest, headers: Headers): ResponseMessage<Service.ListContributorsResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "donation.v1.DonationService/ListContributors",
      net.twinte.api.donation.v1.Service.ListContributorsRequest::class,
      net.twinte.api.donation.v1.Service.ListContributorsResponse::class,
      StreamType.UNARY,
      idempotency = Idempotency.NO_SIDE_EFFECTS,
    ),
  )

}
