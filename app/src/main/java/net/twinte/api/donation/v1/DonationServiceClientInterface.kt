// Code generated by connect-kotlin. DO NOT EDIT.
//
// Source: donation/v1/service.proto
//
package net.twinte.api.donation.v1

import com.connectrpc.Headers
import com.connectrpc.ResponseMessage

/**
 *  The following error codes are not stated explicitly in the each rpc, but may be returned.
 *    - shared.InvalidArgument
 *    - shared.Unauthenticated
 *    - shared.Unauthorized
 */
public interface DonationServiceClientInterface {
  public suspend fun createOneTimeCheckoutSession(request: Service.CreateOneTimeCheckoutSessionRequest, headers: Headers = emptyMap()): ResponseMessage<Service.CreateOneTimeCheckoutSessionResponse>

  public suspend fun createSubscriptionCheckoutSession(request: Service.CreateSubscriptionCheckoutSessionRequest, headers: Headers = emptyMap()): ResponseMessage<Service.CreateSubscriptionCheckoutSessionResponse>

  public suspend fun getPaymentUser(request: Service.GetPaymentUserRequest, headers: Headers = emptyMap()): ResponseMessage<Service.GetPaymentUserResponse>

  public suspend fun updatePaymentUser(request: Service.UpdatePaymentUserRequest, headers: Headers = emptyMap()): ResponseMessage<Service.UpdatePaymentUserResponse>

  public suspend fun listPaymentHistories(request: Service.ListPaymentHistoriesRequest, headers: Headers = emptyMap()): ResponseMessage<Service.ListPaymentHistoriesResponse>

  public suspend fun listSubscriptionPlans(request: Service.ListSubscriptionPlansRequest, headers: Headers = emptyMap()): ResponseMessage<Service.ListSubscriptionPlansResponse>

  public suspend fun getActiveSubscription(request: Service.GetActiveSubscriptionRequest, headers: Headers = emptyMap()): ResponseMessage<Service.GetActiveSubscriptionResponse>

  public suspend fun unsubscribe(request: Service.UnsubscribeRequest, headers: Headers = emptyMap()): ResponseMessage<Service.UnsubscribeResponse>

  public suspend fun getTotalAmount(request: Service.GetTotalAmountRequest, headers: Headers = emptyMap()): ResponseMessage<Service.GetTotalAmountResponse>

  public suspend fun listContributors(request: Service.ListContributorsRequest, headers: Headers = emptyMap()): ResponseMessage<Service.ListContributorsResponse>
}
