// Code generated by connect-kotlin. DO NOT EDIT.
//
// Source: announcement/v1/service.proto
//
package net.twinte.api.announcement.v1

import com.connectrpc.Headers
import com.connectrpc.Idempotency
import com.connectrpc.MethodSpec
import com.connectrpc.ProtocolClientInterface
import com.connectrpc.ResponseMessage
import com.connectrpc.StreamType

/**
 *  The following error codes are not stated explicitly in the each rpc, but may be returned.
 *    - shared.InvalidArgument
 *    - shared.Unauthenticated
 *    - shared.Unauthorized
 */
public class AnnouncementServiceClient(
  private val client: ProtocolClientInterface,
) : AnnouncementServiceClientInterface {
  override suspend fun listAnnouncements(request: Service.ListAnnouncementsRequest, headers: Headers): ResponseMessage<Service.ListAnnouncementsResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "announcement.v1.AnnouncementService/ListAnnouncements",
      net.twinte.api.announcement.v1.Service.ListAnnouncementsRequest::class,
      net.twinte.api.announcement.v1.Service.ListAnnouncementsResponse::class,
      StreamType.UNARY,
      idempotency = Idempotency.NO_SIDE_EFFECTS,
    ),
  )


  override suspend fun readAnnouncements(request: Service.ReadAnnouncementsRequest, headers: Headers): ResponseMessage<Service.ReadAnnouncementsResponse> = client.unary(
    request,
    headers,
    MethodSpec(
    "announcement.v1.AnnouncementService/ReadAnnouncements",
      net.twinte.api.announcement.v1.Service.ReadAnnouncementsRequest::class,
      net.twinte.api.announcement.v1.Service.ReadAnnouncementsResponse::class,
      StreamType.UNARY,
    ),
  )

}
